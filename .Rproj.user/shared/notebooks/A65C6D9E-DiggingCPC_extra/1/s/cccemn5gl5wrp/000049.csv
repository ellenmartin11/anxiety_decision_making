"0",""
"0","happyData1_diag <- merge(happyData1, diag, by=""userKey"")"
"0",""
"0","happyData1_diag <- happyData1_diag %>%"
"0","  filter(!is.na(diagnosis_anxiety) & !is.na(diagnosis_depression)) %>%"
"0","  mutate(diagnosis_anxiety = as.factor(diagnosis_anxiety),"
"0","         diagnosis_depression = as.factor(diagnosis_depression)) %>%"
"0","  mutate(diagnosis_anxiety = case_when(diagnosis_anxiety == 1 ~ ""anx"","
"0","                                       diagnosis_anxiety == 0 ~ ""no anx""),"
"0","         diagnosis_depression = case_when(diagnosis_depression == 1 ~ ""dep"","
"0","                                          diagnosis_depression == 0 ~ ""no dep""))"
"0",""
"0",""
"0","sample_size  = (unique(happyData1_diag$userKey)) # N = 1592"
"0",""
"0","happyData1_diag$diagnosis_anxiety <- as.factor(happyData1_diag$diagnosis_anxiety)"
"0","happyData1_diag$diagnosis_depression <- as.factor(happyData1_diag$diagnosis_depression)"
"0",""
"0","# past"
"0","happyData1_past <- happyData1 %>%"
"0","  arrange(userKey, TrialNumber) %>%"
"0","  group_by(userKey) %>%"
"0","  mutate("
"0","    # Create an indicator for valid happiness ratings"
"0","    happyind = !is.na(zHappy),"
"0","    "
"0","    # Identify if the current trial is on the same island as the previous valid happiness rating"
"0","    prev_happyind_trial = lag(Trial, order_by = TrialNumber),  # Previous trial type (Gain/Loss)"
"0","    "
"0","    # Set PastIsland based on the previous valid happiness rating's trial type"
"0","    PastIsland = case_when("
"0","      lag(happyind, order_by = TrialNumber) & prev_happyind_trial == ""Gain"" ~ 2,"
"0","      lag(happyind, order_by = TrialNumber) & prev_happyind_trial == ""Loss"" ~ 1,"
"0","      TRUE ~ NA_real_  # NA for the first island or no previous valid row"
"0","    )"
"0","  ) %>%"
"0","  ungroup()"
"0",""
"0","happyData1_past <- happyData1_past %>%"
"0","  fill(PastIsland, .direction = ""up"")"
"0",""
"0","sample_size = length(unique(happyData1$userKey))"
